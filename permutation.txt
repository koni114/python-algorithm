** 순열(Permutation)
- 1 ~ N까지로 이루어진 순열
ex)
1 2 3
4 1 3 2
5 4 2 3 1
6 5 1 2 3 4

- 크기는 항상 N이 되어야 하고, 겹치는 숫자가 존재하지 않음.
- 크기가 N인 순열은 총 N!개가 존재한다
  순열을 사전순으로 나열했을 때
  N = 3인 경우에 사전순은 다음과 같다
1 2 3
1 3 2
2 1 3
2 3 1
3 1 2
3 2 1

- ** 다음 순열
순열을 사전순으로 나열했을때, 사전순으로 다음에 오는 순열을 구하는 방법
1. A[i-1] < A[i] 을 만족하는 가장 큰 i를 찾는다
2. j >= i이면서 A[j] > A[i-1]를 만족하는 가장 큰 j를 찾는다
3. A[i-1] 과 A[j]를 swap 한다
4. A[i] 부터 마지막 번호까지 순열을 뒤집는다

이러한 과정이 어떤 의미가 있을까(이게 다음 순열을 찾는 방법임을 어떻게 알지?)
예를들어 1 2 3 4 5 6 7 를 7 6 5 4 3 2 1로 바꾸는 과정을 생각해보자.
중간 과정에서
7 2 3 6 5 4 1 의 다음 순열을 구하는 것은, 
오른쪽에서 가장 긴 오름 차순 순열을 찾아, 오름 차순 순열에서
해당 순열 바로 앞 숫자 보다 크면서 가장 작은 숫자를 찾는다.
즉 내림차순으로 바꾸는 과정임을 생각했을 때, 3보다 크면서 가장 작은 숫자가 
와야 다음 순열이지 않을까~ 라는 생각을 할 수 있다는 것이다. 
따라서 해당 숫자를 바꿔 준 뒤, 다시 뒤집어 주면 오름차순으로 되므로, 다음순열을 
구할 수 있다
7 2 3 | 6 5 4 1
7 2 4 | 6 5 3 1
7 2 4 | 1 3 5 6

다음 순열의 next permutation을 찾아보자
1 2 3 4 5 6 7
-> 핵심 : i가 마지막 위치이므로, 뒤집을 필요는 없다!
1 2 3 4 5 7 6