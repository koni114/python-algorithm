알고리즘 문제 접근 방법
1. 문제를 읽는다(읽으면서 손으로 정리)
2. ** 어떤 알고리즘을 적용할 수 있을까를 생각해본다
- dp, 분할정복, dfs/bfs, 이분 탐색, 완전 탐색, 비트마스크, 
  greedy, 순열, 정렬
- 데이터 저장 방식(stack, queue, 2차원 list 등)

3. N 제한을 생각한다
4. ** 로직을 짜기 전에, 예외를 반드시 생각해본다
중요한건, 예외가 어떤 것이 있을 수가 있을까? 
- 1, 0
- 가장 큰수(N제한 일때, N)
- 다양한 경우의 수(꼭 생각하자)

5. 로직을 짠다(손으로) - 실수 방지
6. 코딩한다

** tip
- 너무 멋있게 풀려고는 하지 말자. 예를들어, brute force로 충분히 풀 수 있는데,
  그렇게 하지 않은 경우 등.. 연습은 하되, 실전에서는 무조건 풀 수 있게만 하자
  목적은 맞게 푸는 것

